<style lang="scss">
  @import "../style/utils/mixins";
  @import "../style/utils/variables";

  :host {
    @include borderBox();
  }
  
  .com-swiperX {
    @include borderBox();
    
    position: relative;
    -webkit-box-sizing: content-box;
    box-sizing: content-box;
    height: rpx(180);
    padding-bottom: rpx(35);
  
    .swiper-el {
      height: 100%;
    }
    .swiper-item {
      @include flex-center();
    }
    .swiper-link {
      display: block;
      width: 100%;
      height: 100%;
      @include flex-center();
    }
    .swiper-indicator {
      position: absolute;
      z-index: 2;
      bottom: 0;
      left: 0;
      width: 100%;
      margin: rpx(30) rpx(30) 0;
      display: flex;
      justify-content: center;
      align-items: center;
    
      .dot {
        display: inline-block;
        width: rpx(20);
        height: rpx(4);
        margin: 0 rpx(10);
        opacity: 0.3;
        background-color: #B3B3B3;
        border-radius: rpx(2);
        transition: all 500ms ease;
      
        &.active {
          opacity: 0.8;
          transform: scaleX(2);
          background-color: $color-primary;
        }
      }
    }
  }
</style>

<template>
  <view class="com-swiperX">
    <swiper class="swiper-el" indicator-dots="{{false}}"
            circular="{{circular}}"
            current="{{current}}"
            interval="{{interval}}"
            duration="{{duration}}"
            circular="{{circular}}"
            autoplay="{{autoplay}}"
            @change="onChange"
            @animationfinish="onAnimationfinish">

      <slot name="item"/>

    </swiper>
    
    <view class="swiper-indicator" wx:if="{{!!indicatorDots && items.length > 1}}">
      <block wx:for="{{items}}" wx:for-item="item" wx:key="index">
        <view class="dot {{current === index ? 'active' : ''}}"></view>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class vSwiper extends wepy.component {
    components = {}

    props = {
      items: {
        type: Array,
        default: []
      },
      indicatorDots: {
        type: [Boolean, String, Number],
        default: true
      },
      autoplay: {
        type: [Boolean, String, Number],
        default: true
      },
      current: {
        type: [Number, String],
        default: 0
      },
      interval: {
        type: [Number, String],
        default: 5000
      },
      duration: {
        type: [Number, String],
        default: 500
      },
      circular: {
        type: [Boolean, String, Number],
        default: true
      }
    }

    data = {

    }
    methods = {
      onChange (e) {
        this.current = e.detail.current
        this.$apply()
        this.$emit('change', e)
      },
      onAnimationfinish (e) {
        this.$emit('animationfinish', e)
      }
    }

    events = {}
    // Other properties
  }
</script>
