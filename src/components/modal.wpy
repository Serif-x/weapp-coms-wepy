<style lang="scss">
  @import "../style/utils/mixins";
  
  :host {
    @include borderBox();
    
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2001;
    overflow: visible;
  }
  
  .com-modal {
    @include borderBox();
    
    position: fixed;
    z-index: 2001;
    top: 0;
    left: 0;
    /*right: 0;*/
    /*bottom: 0;*/
    height: 100%;
    width: 100%;
    /*transform: scale(0);*/
    /*transform-origin: center bottom;*/
    /*display: flex;*/
    justify-content: center;
    align-items: center;
    
    display: none;
    
    .modal-overlay {
      position: absolute;
      z-index: 8;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, .5);
      transition: opacity 250ms ease;
      opacity: 0;
      will-change: opacity;
      
      &.on {
        opacity: 1;
      }
      &.out {
        opacity: 0;
      }
    }
    .modal-body {
      position: relative;
      z-index: 9;
      /*overflow-x: hidden;*/
      /*overflow-y: auto;*/
      transition: transform 250ms ease;
  
      will-change: transform, opacity;
      transform: translate3d(0, 0, 0) scale(.5);
      opacity: 0;
      
      &.on {
        animation: com-modal-in 250ms cubic-bezier(0.2, 0, 0.13, 1.5) forwards;
      }
      
      &.out {
        animation: com-modal-out 250ms ease forwards;
      }
    }
    
    &.on {
      display: flex;
    }
  }
  
  @keyframes com-modal-in {
    0% { transform: translate3d(0, 0, 0) scale(.5); opacity: 0; }
    100% { transform: translate3d(0, 0, 0) scale(1); opacity: 1; }
  }
  @keyframes com-modal-out {
    0% { transform: translate3d(0, 0, 0) scale(1); opacity: 1; }
    100% { transform: translate3d(0, 0, 0) scale(.5); opacity: 0; }
  }
</style>
<template>
  <view
    class="com-modal {{open ? 'on' : ''}}"
    @touchmove.stop="preventDefault"
  >
    <view class="modal-overlay {{on ? 'on' : ''}} {{out ? 'out' : ''}}" @tap="onTapOverlay"></view>
    <view class="modal-body {{on ? 'on' : ''}} {{out ? 'out' : ''}}">
      <slot name="content"/>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import wxAPI from '../common/utils/wxAPI'

  export default class Modal extends wepy.component {
    // components = {}
    props = {
      // show: {
      //   type: Boolean,
      //   default: false
      // },
      static: {
        type: Boolean,
        default: false
      },
      name: {
        type: String,
        default: ''
      }
    }
  
    data = {
      open: false,
      on: false,
      out: true,
      duration: 250
    }
  
    watch = {
      open (cur, old) {
        const $page = wxAPI.getPage(this)
        if ($page) {
          $page.isModalShown = cur
          $page.$apply()
        }

        this.$wxpage.triggerEvent('modal-toggle', cur, old)
      }
    }
  
    toggleModal (flag) {
      const _open = (typeof flag === 'undefined') ? !this.open : flag
  
      return new Promise((resolve) => {
        // Show instantly
        if (_open) {
          this.on = true
          this.out = false
          this.open = true
          this.$apply()

          setTimeout(() => {
            this.$wxpage.triggerEvent('show')
            return resolve()
          }, this.duration)
        } else { // Hide delayed
          this.on = false
          this.out = true
          this.$apply()
  
          setTimeout(() => {
            this.open = false
            this.$apply()
  
            this.$wxpage.triggerEvent('hide')
            return resolve()
          }, this.duration)
        }
      })
    }
  
    methods = {
      toggleModal (flag) {
        return this.toggleModal(flag)
      },
      onTapOverlay () {
        if (this.static) {
          return
        }
        this.toggleModal(false)
      },
  
      preventDefault (e) {
        // Required
      }
    }
  
    events = {
      toggleModal (flag) {
        return this.toggleModal(flag)
      }
    }
  }
</script>
